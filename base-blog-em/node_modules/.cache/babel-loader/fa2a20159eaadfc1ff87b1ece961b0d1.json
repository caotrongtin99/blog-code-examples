{"ast":null,"code":"var _jsxFileName = \"/home/tincaotrong/Documents/blog-code-examples/base-blog-em/src/PostDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function fetchComments(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"DELETE\"\n  });\n  return response.json();\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"PATCH\",\n    data: {\n      title: \"REACT QUERY FOREVER!!!!\"\n    }\n  });\n  return response.json();\n}\n\nexport function PostDetail(_ref) {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  console.log({\n    post\n  }); // replace with useQuery\n\n  const {\n    data,\n    isLoading\n  } = useQuery(['comments', post.id], () => fetchComments(post.id));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Update title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this), data && data.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [comment.email, \": \", comment.body]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n\n_s(PostDetail, \"0VB955moqGTEiUXXbAcRWgIKjHQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useQuery","fetchComments","postId","response","fetch","json","deletePost","method","updatePost","data","title","PostDetail","post","console","log","isLoading","id","color","body","map","comment","email"],"sources":["/home/tincaotrong/Documents/blog-code-examples/base-blog-em/src/PostDetail.jsx"],"sourcesContent":["import { useQuery } from 'react-query'\nasync function fetchComments(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  );\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"DELETE\" }\n  );\n  return response.json();\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"PATCH\", data: { title: \"REACT QUERY FOREVER!!!!\" } }\n  );\n  return response.json();\n}\n\nexport function PostDetail({ post }) {\n  console.log({ post })\n  // replace with useQuery\n  const { data, isLoading } = useQuery(['comments', post.id], () => fetchComments(post.id))\n\n  return (\n    <>\n      <h3 style={{ color: \"blue\" }}>{post.title}</h3>\n      <button>Delete</button> <button>Update title</button>\n      <p>{post.body}</p>\n      <h4>Comments</h4>\n      {isLoading && <div>Loading...</div>}\n      {data && data.map((comment) => (\n        <li key={comment.id}>\n          {comment.email}: {comment.body}\n        </li>\n      ))}\n    </>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;;;;AACA,eAAeC,aAAf,CAA6BC,MAA7B,EAAqC;EACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,wDAAuDF,MAAO,EADrC,CAA5B;EAGA,OAAOC,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,eAAeC,UAAf,CAA0BJ,MAA1B,EAAkC;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CF,MAAO,EAD5B,EAE1B;IAAEK,MAAM,EAAE;EAAV,CAF0B,CAA5B;EAIA,OAAOJ,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,eAAeG,UAAf,CAA0BN,MAA1B,EAAkC;EAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,+CAA8CF,MAAO,EAD5B,EAE1B;IAAEK,MAAM,EAAE,OAAV;IAAmBE,IAAI,EAAE;MAAEC,KAAK,EAAE;IAAT;EAAzB,CAF0B,CAA5B;EAIA,OAAOP,QAAQ,CAACE,IAAT,EAAP;AACD;;AAED,OAAO,SAASM,UAAT,OAA8B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACnCC,OAAO,CAACC,GAAR,CAAY;IAAEF;EAAF,CAAZ,EADmC,CAEnC;;EACA,MAAM;IAAEH,IAAF;IAAQM;EAAR,IAAsBf,QAAQ,CAAC,CAAC,UAAD,EAAaY,IAAI,CAACI,EAAlB,CAAD,EAAwB,MAAMf,aAAa,CAACW,IAAI,CAACI,EAAN,CAA3C,CAApC;EAEA,oBACE;IAAA,wBACE;MAAI,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAT,CAAX;MAAA,UAA+BL,IAAI,CAACF;IAApC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,oBAE0B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAF1B,eAGE;MAAA,UAAIE,IAAI,CAACM;IAAT;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,EAKGH,SAAS,iBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALhB,EAMGN,IAAI,IAAIA,IAAI,CAACU,GAAL,CAAUC,OAAD,iBAChB;MAAA,WACGA,OAAO,CAACC,KADX,QACoBD,OAAO,CAACF,IAD5B;IAAA,GAASE,OAAO,CAACJ,EAAjB;MAAA;MAAA;MAAA;IAAA,QADO,CANX;EAAA,gBADF;AAcD;;GAnBeL,U;UAGcX,Q;;;KAHdW,U"},"metadata":{},"sourceType":"module"}